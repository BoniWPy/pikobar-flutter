# This is a basic workflow to help you get started with Actions

name: Build Test Background Location

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ background-geolocation ]
  # pull_request:
  #   branches: [ feature/Feature-github-workflow ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    name: Build APK

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v1
        with:
          java-version: '12.x'
      - uses: subosito/flutter-action@v1
        with:
          # run spesific version
          flutter-version: '1.17.5'
      
      - name: Decode
        id: write_file
        uses: timheuer/base64-to-file@v1.0.3
        with:
          fileName: 'pikobar.keystore'
          encodedString: ${{ secrets.PIKOBAR_KEY }}
      
      # Runs setup env
      - run: mv ${{ steps.write_file.outputs.filePath }} ./android/pikobar.keystore
      - run: echo 'storeFile=pikobar.keystore' > ./android/key.properties
      - run: echo 'storePassword=${{ secrets.PIKOBAR_PASSWORD }}' >> ./android/key.properties
      - run: echo 'keyPassword=${{ secrets.PIKOBAR_PASSWORD }}' >> ./android/key.properties
      - run: echo 'keyAlias=${{ secrets.PIKOBAR_ALIAS }}' >> ./android/key.properties
      - run: echo '${{ secrets.GOOGLE_SERVICES }}' > ./android/app/google-services.json
      - run: echo '${{ secrets.GOOGLE_SERVICES }}' > ./android/app/src/main/google-services.json
      
      # build APK
      - run: flutter pub get && flutter build apk --debug --split-per-abi

      # move the APKs to root directory
      - run: mv build/app/outputs/apk/debug/app-armeabi-v7a-debug.apk pikobar-armeabi-v7a-debug.apk
      - run: mv build/app/outputs/apk/debug/app-arm64-v8a-debug.apk pikobar-arm64-v8a-debug.apk
      - run: mv build/app/outputs/apk/debug/app-x86_64-debug.apk pikobar-x86_64-debug.apk

      # send to telegram channel
      - run: curl -F chat_id='${{ secrets.TELEGRAM_CHAT_ID }}' -F document=@'pikobar-armeabi-v7a-debug.apk' -F caption='pikobar-armeabi-v7a-debug.apk' https://api.telegram.org/bot'${{ secrets.TELEGRAM_TOKEN }}'/sendDocument
      - run: curl -F chat_id='${{ secrets.TELEGRAM_CHAT_ID }}' -F document=@'pikobar-arm64-v8a-debug.apk' -F caption='pikobar-arm64-v8a-debug.apk' https://api.telegram.org/bot'${{ secrets.TELEGRAM_TOKEN }}'/sendDocument
      - run: curl -F chat_id='${{ secrets.TELEGRAM_CHAT_ID }}' -F document=@'pikobar-x86_64-debug.apk' -F caption='pikobar-x86_64-debug.apk' https://api.telegram.org/bot'${{ secrets.TELEGRAM_TOKEN }}'/sendDocument
